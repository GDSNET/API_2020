{"ast":null,"code":"var config = require('./config');\n\nfunction goodBrowser() {\n  return ['Content-Security-Policy'];\n}\n\nvar handlers = {\n  'Android Browser': function AndroidBrowser(browser, options) {\n    if (parseFloat(browser.os.version) < 4.4 || options.disableAndroid) {\n      return [];\n    } else {\n      return ['Content-Security-Policy'];\n    }\n  },\n  Chrome: function Chrome(browser) {\n    var version = parseFloat(browser.version);\n\n    if (version >= 14 && version < 25) {\n      return ['X-WebKit-CSP'];\n    } else if (version >= 25) {\n      return ['Content-Security-Policy'];\n    } else {\n      return [];\n    }\n  },\n  'Chrome Mobile': function ChromeMobile(browser) {\n    if (browser.os.family === 'iOS') {\n      return ['Content-Security-Policy'];\n    } else {\n      return handlers['Android Browser'].apply(this, arguments);\n    }\n  },\n  Firefox: function Firefox(browser) {\n    var version = parseFloat(browser.version);\n\n    if (version >= 23) {\n      return ['Content-Security-Policy'];\n    } else if (version >= 4 && version < 23) {\n      return ['X-Content-Security-Policy'];\n    } else {\n      return [];\n    }\n  },\n  'Firefox Mobile': function FirefoxMobile(browser) {\n    // Handles both Firefox for Android and Firefox OS\n    var family = browser.os.family;\n    var version = parseFloat(browser.version);\n\n    if (family === 'Firefox OS') {\n      if (version >= 32) {\n        return ['Content-Security-Policy'];\n      } else {\n        return ['X-Content-Security-Policy'];\n      }\n    } else if (family === 'Android') {\n      if (version >= 25) {\n        return ['Content-Security-Policy'];\n      } else {\n        return ['X-Content-Security-Policy'];\n      }\n    }\n\n    return [];\n  },\n  'Firefox for iOS': goodBrowser,\n  IE: function IE(browser) {\n    var version = parseFloat(browser.version);\n    var header = version < 12 ? 'X-Content-Security-Policy' : 'Content-Security-Policy';\n    return [header];\n  },\n  'Microsoft Edge': goodBrowser,\n  'Microsoft Edge Mobile': goodBrowser,\n  Opera: function Opera(browser) {\n    if (parseFloat(browser.version) >= 15) {\n      return ['Content-Security-Policy'];\n    } else {\n      return [];\n    }\n  },\n  Safari: function Safari(browser) {\n    var version = parseFloat(browser.version);\n\n    if (version >= 7) {\n      return ['Content-Security-Policy'];\n    } else if (version >= 6) {\n      return ['X-WebKit-CSP'];\n    } else {\n      return [];\n    }\n  }\n};\nhandlers['IE Mobile'] = handlers.IE;\n\nmodule.exports = function getHeaderKeysForBrowser(browser, options) {\n  var handler = handlers[browser.name];\n\n  if (handler) {\n    return handler(browser, options);\n  } else {\n    return config.allHeaders;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}