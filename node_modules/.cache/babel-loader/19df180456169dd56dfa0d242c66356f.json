{"ast":null,"code":"'use strict';\n\nvar helmet = require('helmet');\n\nvar zip = require('express-easy-zip'); // 'node-archiver', 'zipstream' or 'easyzip'  may be used instead.\n\n\nvar bodyParser = require('body-parser');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar _require = require('./lib'),\n    id2path = _require.id2path,\n    handleError = _require.handleError;\n\nmodule.exports = function (config) {\n  var router = express.Router();\n  router.use(function (req, res, next) {\n    res.header('Access-Control-Allow-Methods', 'GET,POST,HEAD,OPTIONS,PUT,PATCH,DELETE');\n    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n    next();\n  });\n  router.use(helmet.noCache());\n  router.use(zip());\n  router.use(bodyParser.json());\n  var reqPath;\n\n  var connect = function connect(moduleLocation, getArgs) {\n    return function (req, res, next) {\n      require(moduleLocation)(Object.assign({\n        config: config,\n        req: req,\n        res: res,\n        next: next,\n        handleError: handleError({\n          config: config,\n          req: req,\n          res: res\n        })\n      }, getArgs ? getArgs() : {}));\n    };\n  };\n\n  router.param('id', function (req, res, next, id) {\n    try {\n      reqPath = id2path(id);\n    } catch (err) {\n      return handleError({\n        config: config,\n        req: req,\n        res: res\n      })(Object.assign(err, {\n        httpCode: 400\n      }));\n    }\n\n    return next();\n  });\n  router.route('/files/:id/children').get(connect('./listChildren', function (_) {\n    return {\n      path: reqPath\n    };\n  }));\n  router.route('/files/:id/search').get(connect('./search', function (_) {\n    return {\n      path: reqPath\n    };\n  }));\n  router.route('/files/:id').get(connect('./statResource', function (_) {\n    return {\n      path: reqPath\n    };\n  })).patch(connect('./renameCopyMove', function (_) {\n    return {\n      path: reqPath\n    };\n  })).delete(connect('./remove', function (_) {\n    return {\n      path: reqPath\n    };\n  }));\n  router.route('/files').get(connect('./statResource', function (_) {\n    return {\n      path: path.sep\n    };\n  })).post(connect('./uploadOrCreate'));\n  router.route('/download').get(connect('./download'));\n  router.use(function (err, req, res, next) {\n    return handleError({\n      config: config,\n      req: req,\n      res: res\n    })(err);\n  });\n  return router;\n};","map":null,"metadata":{},"sourceType":"script"}