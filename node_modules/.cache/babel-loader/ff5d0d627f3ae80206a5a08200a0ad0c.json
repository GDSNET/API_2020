{"ast":null,"code":"var isFunction = require('../../is-function');\n\nvar config = require('../../config');\n\nmodule.exports = function sourceListCheck(key, value, options) {\n  var directiveInfo = config.directives[key];\n\n  if (value === false) {\n    return;\n  }\n\n  if (!Array.isArray(value)) {\n    throw new Error('\"' + value + '\" is not a valid value for ' + key + '. Use an array of strings.');\n  }\n\n  if (value.length === 0) {\n    throw new Error(key + ' must have at least one value. To block everything, set ' + key + ' to [\"\\'none\\'\"].');\n  }\n\n  value.forEach(function (sourceExpression) {\n    if (!sourceExpression) {\n      throw new Error('\"' + sourceExpression + '\" is not a valid source expression. Only non-empty strings are allowed.');\n    }\n\n    if (isFunction(sourceExpression)) {\n      return;\n    }\n\n    sourceExpression = sourceExpression.valueOf();\n\n    if (typeof sourceExpression !== 'string' || sourceExpression.length === 0) {\n      throw new Error('\"' + sourceExpression + '\" is not a valid source expression. Only non-empty strings are allowed.');\n    }\n\n    if (!directiveInfo.hasUnsafes && config.unsafes.indexOf(sourceExpression) !== -1 || !directiveInfo.hasStrictDynamic && config.strictDynamics.indexOf(sourceExpression) !== -1) {\n      throw new Error('\"' + sourceExpression + '\" does not make sense in ' + key + '. Remove it.');\n    }\n\n    if (config.mustQuote.indexOf(sourceExpression) !== -1) {\n      throw new Error('\"' + sourceExpression + '\" must be quoted in ' + key + '. Change it to \"\\'' + sourceExpression + '\\'\" in your source list. Force this by enabling loose mode.');\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"script"}