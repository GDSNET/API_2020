{"ast":null,"code":"var isString = require('./lib/isstring');\n\nmodule.exports = function frameguard(options) {\n  options = options || {};\n  var domain = options.domain;\n  var action = options.action;\n  var directive;\n\n  if (action === undefined) {\n    directive = 'SAMEORIGIN';\n  } else if (isString(action)) {\n    directive = action.toUpperCase();\n  }\n\n  if (directive === 'ALLOWFROM') {\n    directive = 'ALLOW-FROM';\n  } else if (directive === 'SAME-ORIGIN') {\n    directive = 'SAMEORIGIN';\n  }\n\n  if (['DENY', 'ALLOW-FROM', 'SAMEORIGIN'].indexOf(directive) === -1) {\n    throw new Error('action must be undefined, \"DENY\", \"ALLOW-FROM\", or \"SAMEORIGIN\".');\n  }\n\n  if (directive === 'ALLOW-FROM') {\n    if (!isString(domain)) {\n      throw new Error('ALLOW-FROM action requires a domain parameter.');\n    }\n\n    if (!domain.length) {\n      throw new Error('domain parameter must not be empty.');\n    }\n\n    directive = 'ALLOW-FROM ' + domain;\n  }\n\n  return function frameguard(req, res, next) {\n    res.setHeader('X-Frame-Options', directive);\n    next();\n  };\n};","map":null,"metadata":{},"sourceType":"script"}