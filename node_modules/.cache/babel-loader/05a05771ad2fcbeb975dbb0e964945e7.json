{"ast":null,"code":"var DEFAULT_MIDDLEWARE = ['dnsPrefetchControl', 'frameguard', 'hidePoweredBy', 'hsts', 'ieNoOpen', 'noSniff', 'xssFilter'];\nvar middlewares;\n\nfunction helmet(options) {\n  options = options || {};\n\n  if (options.constructor.name === 'IncomingMessage') {\n    throw new Error('It appears you have done something like `app.use(helmet)`, but it should be `app.use(helmet())`.');\n  }\n\n  var stack = middlewares.reduce(function (result, middlewareName) {\n    var middleware = helmet[middlewareName];\n    var middlewareOptions = options[middlewareName];\n    var isDefault = DEFAULT_MIDDLEWARE.indexOf(middlewareName) !== -1;\n\n    if (middlewareOptions === false) {\n      return result;\n    } else if (middlewareOptions === true) {\n      middlewareOptions = {};\n    }\n\n    if (middlewareOptions != null) {\n      return result.concat(middleware(middlewareOptions));\n    } else if (isDefault) {\n      return result.concat(middleware({}));\n    }\n\n    return result;\n  }, []);\n  return function helmet(req, res, next) {\n    var index = 0;\n\n    function internalNext() {\n      if (arguments.length > 0) {\n        return next.apply(null, arguments);\n      }\n\n      var middleware = stack[index];\n\n      if (!middleware) {\n        return next();\n      }\n\n      index++;\n      middleware(req, res, internalNext);\n    }\n\n    internalNext();\n  };\n}\n\nhelmet.contentSecurityPolicy = require('helmet-csp');\nhelmet.dnsPrefetchControl = require('dns-prefetch-control');\nhelmet.expectCt = require('expect-ct');\nhelmet.frameguard = require('frameguard');\nhelmet.hidePoweredBy = require('hide-powered-by');\nhelmet.hpkp = require('hpkp');\nhelmet.hsts = require('hsts');\nhelmet.ieNoOpen = require('ienoopen');\nhelmet.noCache = require('nocache');\nhelmet.noSniff = require('dont-sniff-mimetype');\nhelmet.permittedCrossDomainPolicies = require('helmet-crossdomain');\nhelmet.referrerPolicy = require('referrer-policy');\nhelmet.xssFilter = require('x-xss-protection');\nmiddlewares = Object.keys(helmet);\nmodule.exports = helmet;","map":null,"metadata":{},"sourceType":"script"}